---
- hosts: all
  become: yes
  vars:
    app_name: flask-app
    app_user: newuser
    app_group: newuser
    app_dir: /opt/{{ app_name }}
    venv_dir: "{{ app_dir }}/venv"
    app_src: flask-app/

  tasks:
  - name: Prepare the Environment
    yum:
      name:
        - python3
        - python3-pip
      state: present

  - name: Create a virtual environment
    ansible.builtin.pip:
      name: virtualenv
      state: present
      executable: pip3

  - name: Create Flask application virtual environment
    ansible.builtin.command: python3 -m venv "{{ venv_dir }}"
    args:
      creates: "{{ venv_dir }}"

  - name: Deploy the Flask Application
    copy:
      content: |
        from flask import Flask
        app = Flask(__name__)
        @app.route('/')
        def hello():
            return 'Hello, from Abhinav!This is running now ok'
        if __name__ == '__main__':
            app.run(host='0.0.0.0', port=5000)
      dest: "{{ app_dir }}/app.py"
      owner: "{{ app_user }}"
      group: "{{ app_group }}"
      mode: '0644'

  - name: Copy requirements.txt
    copy:
      content: |
        flask
      dest: "{{ app_dir }}/requirements.txt"
      owner: "{{ app_user }}"
      group: "{{ app_group }}"
      mode: '0644'

  - name: Install Flask in virtual environment
    pip:
      requirements: "{{ app_dir }}/requirements.txt"
      virtualenv: "{{ venv_dir }}"
      state: present

  - name: Create systemd service file
    template:
      src: flask-app.service.j2
      dest: /etc/systemd/system/{{ app_name }}.service
      owner: root
      group: root
      mode: '0644'
    notify: Restart Flask service

  - name: Reload systemd daemon
    command: systemctl daemon-reload

  - name: Restart Flask service
    systemd:
      name: "{{ app_name }}"
      state: restarted

  - name: Start and enable Flask service
    systemd:
      name: "{{ app_name }}"
      state: started
      enabled: yes

  - name: Open firewall port for flask application
    firewalld:
      port: 5000/tcp
      permanent: yes
      state: enabled

  - name: Reload firewalld
    command: firewall-cmd --reload

  handlers:
  - name: Restart Flask service
    systemd:
      name: "{{ app_name }}"
      state: restarted
