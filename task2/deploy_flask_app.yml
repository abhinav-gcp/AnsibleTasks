---
# Install system packages
- hosts: all
  become: yes
  become_method: sudo

  tasks:
  - name: Install epel-release
    yum:
      name: epel-release
      state: present

  - name: Install python3 and pip
    yum:
      name: python3,pip
      state: present

  - name: Install virtualenv
    pip:
      name: virtualenv
      state: present
    become: yes
    become_user: newuser

  - name: Create a directory for the virtual environment
    file:
      path: "{{ ansible_env.HOME }}/venv"
      state: directory
      owner: newuser
      group: newuser

  - name: Create a virtual environment
    command: virtualenv -p python3 "{{ ansible_env.HOME }}/venv"
    become: yes
    become_method: sudo
    become_user: newuser
    environment:
      PATH: "{{ ansible_env.HOME }}/venv/bin:{{ ansible_env.PATH }}"

  - name: Install Flask and dependencies
    pip:
      virtualenv: "{{ ansible_env.HOME }}/venv"
      requirements:
        - Flask==1.1.4
        - Werkzeug==0.16.1
        - Jinja2==2.11.3
        - MarkupSafe==1.1.1

  - name: Copy application files
    copy:
      content: |
        from flask import Flask
        app = Flask(__name__)

        @app.route("/")
        def hello_world():
            return "Hello, World!"

        if __name__ == "__main__":
            app.run()
      dest: "{{ ansible_env.HOME }}/app.py"
      mode: '0644'
      owner: newuser
      group: newuser

  - name: Copy service file
    copy:
      content: |
        [Unit]
        Description=Gunicorn instance to serve myproject
        After=network.target

        [Service]
        User=newuser
        Group=newuser
        WorkingDirectory={{ ansible_env.HOME }}
        ExecStart={{ ansible_env.HOME }}/venv/bin/gunicorn --workers 3 --bind unix:myproject.sock -m 007 app:app

        [Install]
        WantedBy=multi-user.target
      dest: /etc/systemd/system/myproject.service
      mode: '0644'

  - name: Start gunicorn service
    service:
      name: myproject
      state: started
      enabled: yes
    when: ansible_distribution_major_version == "7"

  - name: Start gunicorn service (CentOS 8)
    service:
      name: myproject
      state: started
      enabled: yes
    when: ansible_distribution_major_version == "8"

  - name: Install nginx
    yum:
      name: nginx
      state: present

  - name: Copy nginx config
    copy:
      content: |
        server {
            listen 80;
            server_name your_domain;

            location / {
                proxy_pass http://unix:{{ ansible_env.HOME }}/myproject.sock;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }
        }
      dest: /etc/nginx/conf.d/default.conf
      mode: '0644'

  - name: Restart nginx
    service:
      name: nginx
      state: restarted
